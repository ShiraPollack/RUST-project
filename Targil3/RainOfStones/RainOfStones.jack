//Shira Yodaiken 315119461 
//Beila Wellner 205823792


class RainOfStones {

    // Square
    field Square square;

    // square's movement direction
    field int direction; // 0=none,1=up,2=down,3=left,4=right

    /** Constructs a new RainOfStones. */
    constructor RainOfStones new() {
        let square = Square.new(245, 245, 10);

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do square.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Starts the game. Handles inputs from the user that controls
     *  the square movement direction and size. */
	method void run() {
        var char userKey;
        var boolean exit;
		var Array line_of_stones;
		var Array lines;
		var int lenOfStones;
		var int i;
		var int j;
		var int locationOfLine; 
		var int scoresCounter;
		let lines = Array.new(10);
		let lenOfStones = 40;
		let i = 0;
		let locationOfLine = 0;
		let scoresCounter = 0;
		let exit = false;
		
		//initial the lines
		while (i < 10)
		{
			let line_of_stones = Array.new(2);	
			let line_of_stones[0] = Random.between(0,451); // (x) of The begining of stone
			let line_of_stones[1] = locationOfLine;		   // (y) of the begining of stone
			let lines[i] = line_of_stones;
			let i = i + 1;
			let locationOfLine = locationOfLine + 20;
		}
		
		//writing the score on the screen
		do Output.moveCursor(2,1);
			do Output.printString("S");
			do Output.moveCursor(4,1);
			do Output.printString("C");
			do Output.moveCursor(6,1);
			do Output.printString("O");
			do Output.moveCursor(8,1);
			do Output.printString("R");
			do Output.moveCursor(10,1);
			do Output.printString("E");
			do Output.moveCursor(12,1);
			do Output.printString(":");
			do Output.moveCursor(14,1);
			do Output.printInt(scoresCounter);
		
		while (~exit) 
		{			
			let userKey = Keyboard.keyPressed();
			//writing and deleting all the lines
			let i =  0;
			while (i < 10)
			{
				let line_of_stones = lines[i];
				// the square touches the line of stone(y)
				if(((line_of_stones[1] < (square.y()+square.size())) & (square.y() < (line_of_stones[1]+6))))
				{
					// the square touches the stone(x)
					if((line_of_stones[0] < square.x()) & ((square.x()+square.size()) < (line_of_stones[0]+lenOfStones)))
					{
						let userKey = 69;
					}
					
				}
				do Screen.setColor(false); // white				
				do Screen.drawRectangle(line_of_stones[0],line_of_stones[1],line_of_stones[0]+lenOfStones,line_of_stones[1]+6);				
			
				if(line_of_stones[1] > 245) // the line reached the bottom of the screen
				{
					let line_of_stones[0] = Random.between(0,451);
					let line_of_stones[1] = 0;
					let scoresCounter = scoresCounter + 1;
					do Output.moveCursor(14,1);
					do Output.printInt(scoresCounter);
				}
			
				let line_of_stones[1] = line_of_stones[1] + 4; // the speed at which the lines go down
				do Screen.setColor(true); // black
				do Screen.drawRectangle(line_of_stones[0],line_of_stones[1],line_of_stones[0]+lenOfStones,line_of_stones[1]+6);				
				let i = i + 1;
			}
			
			
	        do Sys.wait(4); // Delays the next movement.
			
            if (userKey = 69) {
                let exit = true;
            }
            if (userKey = 131) {
				let j = 0;
				while (j < 4) {
					do square.moveUp();
					let j = j + 1;
				}
            }
            if (userKey = 133) {
                let j = 0;
				while (j < 4) {
					do square.moveDown();
					let j = j + 1;
				}
            }
            if (userKey = 130) {
				if (square.x() > 41) {
					let j = 0;
					while (j < 4) {
						do square.moveLeft();
						let j = j + 1;
					}
				}
            }
            if (userKey = 132) {
                let j = 0;
				while (j < 4) {
					do square.moveRight();
					let j = j + 1;
				}
            }
        }
          
		let i = 0;
		while (i < 10) {
			let line_of_stones = lines[i];
			do line_of_stones.dispose();
			let i = i + 1;		
		}

		do lines.dispose();
        
        return;
	}
}
